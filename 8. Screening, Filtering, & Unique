##################### Screening #####################

# The "screen.seqs" command within mothur trimmeed our raw microbiome sequences to have
# no ambiguous base pairs, a minimum length of 1350 base pairs long, a maximum lenght of 
# 1550 base pairs long, and a maximum homopolymer of 8 bp long. 

# This pipeline was run using the screen.seqs command within the mothur module

####################################### 


#!/bin/bash
#SBATCH --time=24:00:00   # walltime
#SBATCH --ntasks=4        # number of processor cores (i.e. tasks)
#SBATCH --nodes=1         # number of nodes
#SBATCH --mem=4G          # total memory
#SBATCH -J "mothur_align_screen_loop" # job name
#SBATCH --output="mothur_align_screen_loop"

# Load modules
module load GCC/12.3.0
module load mothur/1.48.2

# Define input/output
input_dir="/scratch/user/carlylo/Cass_Microbiome/Mothur_Align_Output"
output_dir="/scratch/user/carlylo/Cass_Microbiome/Mothur_Screen_Output/Align"

# Find all .fasta files in the input directory and loop through them
find "$input_dir" -type f -name "*.align" | while IFS= read -r align_file; do

    # Get sample name without extension
    sample_name=$(basename "$align_file" .align)

    # Debug message
    echo "Processing sample: $sample_name"

    # Run mothur with output directory and screen.seqs
    mothur "#set.dir(output=$output_dir); screen.seqs(fasta=$align_file, minlength=1350, maxlength=1550, maxambig=0, maxhomop=8)"

    echo "Finished processing: $sample_name"
done

echo "All samples processed!"








################################ Filtering ###############################

# filter.seqs removes the '-' character from alignment fastas generated from the
# reference alignments against the SILVA database. These columns are not included
# when calculating distances because they have no information in them. By removing
# these columns, the calculation of a large number of distances is accelerated.

# This pipeline was run using the filter.seqs command within the mothur module


#############################################

#!/bin/bash
#SBATCH --time=24:00:00   # walltime
#SBATCH --ntasks=4   # number of processor cores (i.e. tasks)
#SBATCH --nodes=1   # number of nodes
#SBATCH --mem=4G   # memory per CPU core
#SBATCH -J "mothur_filter_loop" # job name
#SBATCH --output "mothur_filter_loop"

#Upload modules
module load GCC/12.3.0
module load mothur/1.48.2

# Define the input directory where your aligned files are located
input_dir="/scratch/user/carlylo/Cass_Microbiome/Mothur_Screen_Output/Align"

# Define the output directory where you want the filtered files to be saved
output_dir="/scratch/user/carlylo/Cass_Microbiome/Mothur_Filter_Output"

# Loop through all files in the input directory that end with ".align"
find "$input_dir" -type f -name "*.align" | while IFS= read -r align_file; do

  # Get the filename without the extension
  filename=$(basename "$align_file" .align)

  # Print a message to the user indicating which file is being processed
  echo "Filtering sequences in $align_file"

  # Run the filter.seqs command
  mothur "#set.dir(output=$output_dir); filter.seqs(fasta=$align_file)"

  echo "Filtering complete for $filename"

done

echo "All files processed."







############################ Unique #############################

# The unique.seqs command returns only the unique sequences found in a 
# fasta-formatted sequence file and a file that indicates those sequences 
# that are identical to the reference sequence.

# This pipeline was run using the unique.seqs command within the mothur module


###############################################


#!/bin/bash
#SBATCH --time=24:00:00   # walltime
#SBATCH --ntasks=4   # number of processor cores (i.e. tasks)
#SBATCH --nodes=1   # number of nodes
#SBATCH --mem=4G   # memory per CPU core
#SBATCH -J "mothur_unique_loop" # job name
#SBATCH --output "mothur_unique_loop"

#Upload modules
module load GCC/12.3.0
module load mothur/1.48.2

# Define the directory containing Screened FASTA files
input_dir="/scratch/user/carlylo/Cass_Microbiome/Mothur_Screen_Output"

# Define the output directory for mothur Unique results
output_dir="/scratch/user/carlylo/Cass_Microbiome/Mothur_Unique_Output"

# Find all .fasta files in the input directory and loop through them
find "$input_dir" -type f -name "*.fasta" | while IFS= read -r fasta_file; do

    # Sample Name Identification
    sample_name=$(basename "$fasta_file" .fasta)

    # Debug
    echo "Processing sample: $sample_name"

    # Mothur code for fasta files
    mothur "#set.dir(output=$output_dir); unique.seqs(fasta=$fasta_file)"

    # Debug
    echo "Finished processing: $sample_name"
done

# Debug
echo "All samples processed!"

